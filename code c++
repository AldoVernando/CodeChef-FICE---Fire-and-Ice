#include<stdio.h>

struct matrix{
	unsigned long long A , B , C , D;
}matrixIdentity, matrixFibo;

struct matrix multiply(matrix mat , matrix rix, int mod){
		matrix result;

		result.A = ((mat.A * rix.A) + (mat.B * rix.C)) % mod;
		result.B = ((mat.A * rix.B) + (mat.B * rix.D)) % mod;
		result.C = ((mat.C * rix.A) + (mat.D * rix.C)) % mod;
		result.D = ((mat.C * rix.B) + (mat.D * rix.D)) % mod;
		
		return result;
}

struct matrix fibo(int n, int m){
	
	if(n == 0)
		return matrixIdentity;

	if(n % 2 == 0){ // Even
		matrix sum = fibo(n/2,m);
		return multiply(sum,sum,m);
	}
	
	if(n % 2 == 1){ // Odd
		return multiply(matrixFibo,fibo(n-1,m),m);
	}
}

int main(){
	
	int n , m;
	matrixIdentity.A = 1;	
	matrixIdentity.B = 0;
	matrixIdentity.C = 0;
	matrixIdentity.D = 1;
	
	matrixFibo.A = 1;
	matrixFibo.B = 1;
	matrixFibo.C = 1;
	matrixFibo.D = 0;
	
	int testCase;
	
	scanf("%d",&testCase);
	
	for(int i=0;i<testCase;i++){
		
		scanf("%d %d",&n,&m);
		
		if(n == 0 || m == 0)
			printf("0\n");
		else
			printf("%llu\n",(2*fibo(n-1,m).A) % m);
	}
	
	return 0;
}
